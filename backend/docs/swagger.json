{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This API provides comprehensive voucher management and seat assignment functionality for flight booking systems. It enables checking existing voucher assignments, generating new vouchers with random seat allocation, and managing the entire voucher lifecycle.\n\n## Features\n- Check existing voucher assignments for specific flights and dates\n- Generate vouchers with automatic random seat assignment\n- Prevent duplicate voucher assignments\n- RESTful API design with comprehensive error handling\n- Request validation and structured error responses\n\n## Error Handling\nAll endpoints return structured error responses with appropriate HTTP status codes:\n- 200: Success\n- 400: Bad Request (validation errors, malformed request body, invalid parameters)\n- 500: Internal Server Error\n\n## Rate Limiting\nAPI requests are subject to rate limiting to ensure fair usage and system stability.",
        "title": "Voucher Seat Assignment API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Ghalmas Shanditya Putra Agung",
            "url": "https://github.com/ghalmasshandityaaa",
            "email": "ghalmas.shanditya.putra.agung@gmail.com"
        },
        "version": "1.0.0"
    },
    "host": "localhost:3000",
    "basePath": "/api",
    "paths": {
        "/aircraft/seats": {
            "get": {
                "description": "This endpoint returns a list of seats for a given aircraft type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Aircrafts"
                ],
                "summary": "List seats for a given aircraft type",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Aircraft type",
                        "name": "type",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully listed seats",
                        "schema": {
                            "$ref": "#/definitions/model.AircraftSeatSwaggerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid payload, unprocessable entity, validation error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/check": {
            "post": {
                "description": "This endpoint checks whether a specific flight already has vouchers assigned for a given date. It helps prevent duplicate voucher assignments and ensures proper voucher management.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vouchers"
                ],
                "summary": "Check if flight has assigned vouchers",
                "parameters": [
                    {
                        "description": "Request body containing flight information and date to check for existing vouchers",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CheckVoucherRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully checked voucher existence status",
                        "schema": {
                            "$ref": "#/definitions/model.CheckVoucherResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid payload, unprocessable entity or validation error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/generate": {
            "post": {
                "description": "This endpoint generates vouchers for a specific flight with randomly chosen seats. It ensures fair distribution of seats and prevents manual seat selection bias. The system will automatically assign available seats to the generated vouchers.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vouchers"
                ],
                "summary": "Generate vouchers with random seat assignment",
                "parameters": [
                    {
                        "description": "Request body containing flight details and number of vouchers to generate",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.GenerateVoucherRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully generated vouchers with assigned seats",
                        "schema": {
                            "$ref": "#/definitions/model.GenerateVoucherResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid payload, unprocessable entity, validation error, or insufficient available seats",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.AircraftType": {
            "type": "string",
            "enum": [
                "ATR",
                "Airbus 320",
                "Boeing 737 Max"
            ],
            "x-enum-varnames": [
                "ATR",
                "Airbus320",
                "Boeing737Max"
            ]
        },
        "model.AircraftSeatResponse": {
            "type": "object",
            "properties": {
                "assigned": {
                    "type": "boolean"
                },
                "row_number": {
                    "type": "integer"
                },
                "seat": {
                    "type": "string"
                }
            }
        },
        "model.AircraftSeatSwaggerResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.AircraftSeatResponse"
                    }
                },
                "ok": {
                    "type": "boolean"
                }
            }
        },
        "model.CheckVoucherRequest": {
            "type": "object",
            "required": [
                "date",
                "flightNumber"
            ],
            "properties": {
                "date": {
                    "type": "string"
                },
                "flightNumber": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3
                }
            }
        },
        "model.CheckVoucherResponse": {
            "type": "object",
            "properties": {
                "exists": {
                    "type": "boolean"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "model.ErrorResponse": {
            "type": "object",
            "properties": {
                "errors": {},
                "success": {
                    "type": "boolean"
                }
            }
        },
        "model.GenerateVoucherRequest": {
            "type": "object",
            "required": [
                "aircraft",
                "date",
                "flightNumber",
                "id",
                "name"
            ],
            "properties": {
                "aircraft": {
                    "enum": [
                        "ATR",
                        "Airbus 320",
                        "Boeing 737 Max"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/entity.AircraftType"
                        }
                    ]
                },
                "date": {
                    "type": "string"
                },
                "flightNumber": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 2
                }
            }
        },
        "model.GenerateVoucherResponse": {
            "type": "object",
            "properties": {
                "seats": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        }
    }
}